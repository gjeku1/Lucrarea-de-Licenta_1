# YOLO Vehicle Detection Configuration
# antrenare

data:
  dataset_root: "dataset"
  train_images: "images/train"
  val_images: "images/valid"
  test_images: "images/test"
  train_labels: "labels/train"
  val_labels: "labels/valid"
  test_labels: "labels/test"
  class_names:
    - "Ambulance"
    - "car"
    - "BUS"
    - "Truck"
  num_classes: 4

training:
  model_name: "yolov8n.pt"
  model_size: "n"
  epochs: 100
  batch_size: 16
  learning_rate: 0.01
  image_size: 640
  device: 0
  workers: 8
  patience: 50
  save_period: 10
  cache: true
  hsv_h: 0.015
  hsv_s: 0.7
  hsv_v: 0.4
  degrees: 0.0
  translate: 0.1
  scale: 0.5
  shear: 0.0
  perspective: 0.0
  flipud: 0.0
  fliplr: 0.5
  mosaic: 1.0
  mixup: 0.0
  project_name: "runs/train"
  experiment_name: "vehicle_detection"
  save_json: true
  save_hybrid: false

inference:
  model_path: "runs/train/vehicle_detection/weights/best.pt"
  confidence_threshold: 0.25
  iou_threshold: 0.45
  max_detections: 1000
  image_size: 640
  device: 0
  save_images: true
  save_txt: false
  save_conf: true
  save_crop: false
  show_labels: true
  show_conf: true
  line_thickness: 3
  colors:
    - [255, 0, 0]
    - [0, 255, 0]
    - [0, 0, 255]
    - [255, 255, 0]

evaluation:
  model_path: "runs/train/vehicle_detection/weights/best.pt"
  data_yaml: "data.yaml"
  image_size: 640
  device: 0
  batch_size: 32
  confidence_threshold: 0.001
  iou_threshold: 0.6
  save_json: true
  save_hybrid: false
  plots: true
  verbose: true

neptune:
  project_name: "vehicle-detection/yolo"
  api_token: null
  mode: "async"
  log_model_checkpoints: true
  log_images: true
  log_predictions: true
  log_metrics: true
  log_hyperparameters: true
  upload_source_files:
    - "train.py"
    - "inference.py"
    - "evaluation.py"
    - "config.py"
    - "utils.py"
    - "data.yaml"
